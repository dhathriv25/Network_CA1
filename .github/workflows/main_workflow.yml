name: Deploy Flask App

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Manual trigger option

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y ansible unzip python3-pip
          pip3 install boto3 botocore

      - name: Setup AWS CLI
        run: |
          if aws --version > /dev/null 2>&1; then
            echo "AWS CLI already installed. Updating..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install --update
          else
            echo "AWS CLI not found. Installing..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi
          aws --version

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Verify AWS Credentials
        run: |
          if ! aws sts get-caller-identity; then
            echo "AWS credentials verification failed!"
            exit 1
          fi

      - name: Verify AWS SSM Access
        run: |
          if ! aws ssm describe-instance-information; then
            echo "SSM access verification failed!"
            exit 1
          fi

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i NetworkSec.ini flask-app/deploy_flask.yml --extra-vars "ansible_python_interpreter=/usr/bin/python3"
          if [ $? -ne 0 ]; then
            echo "Ansible playbook execution failed!"
            exit 1
          fi
          echo "Deployment completed successfully!"
